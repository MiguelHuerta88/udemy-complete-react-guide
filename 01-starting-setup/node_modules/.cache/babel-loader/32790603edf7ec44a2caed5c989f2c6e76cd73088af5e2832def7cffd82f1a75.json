{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // state\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  /*\n  Single input for all state properties\n  const [userInput, setUserInput] = useState({\n      enteredTitle: '',\n      enteredAmount: '',\n      enteredDate: ''\n       // to update in the handlers you woudl do something like\n      //setUserInput({...userInput, enteredTitle: event.target.value})\n      // setting like above it wrong. use this syntax\n      // setUserInput((prevState) => {\n      //    return { ...prevState, enteredTitle: event.target.value}\n      //})\n  });*/\n\n  // events\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  // single shared handler function\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === 'title') setEnteredTitle(value);else if (identifier === 'date') setEnteredDate(value);else setEnteredAmount(value);\n  };\n  const formSubmitHandler = event => {\n    // prevent the form from sending request\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    setEnteredTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler,\n          value: enteredTitle /*onChange={(event) => inputChangeHandler('title', event.target.value)}*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2026-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","inputChangeHandler","identifier","formSubmitHandler","preventDefault","expenseData","title","amount","date","Date","console","log","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./ExpenseForm.css\"\n\nconst ExpenseForm = () => {\n    // state\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    /*\n    Single input for all state properties\n    const [userInput, setUserInput] = useState({\n        enteredTitle: '',\n        enteredAmount: '',\n        enteredDate: ''\n\n        // to update in the handlers you woudl do something like\n        //setUserInput({...userInput, enteredTitle: event.target.value})\n        // setting like above it wrong. use this syntax\n        // setUserInput((prevState) => {\n        //    return { ...prevState, enteredTitle: event.target.value}\n        //})\n    });*/\n\n    // events\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n\n    // single shared handler function\n    const inputChangeHandler = (identifier, value) => {\n        if (identifier === 'title') setEnteredTitle(value);\n        else if (identifier === 'date') setEnteredDate(value);\n        else setEnteredAmount(value);\n    }\n\n    const formSubmitHandler = (event) => {\n        // prevent the form from sending request\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        console.log(expenseData);\n        setEnteredTitle('');\n    };\n\n    return <form onSubmit={formSubmitHandler}>\n        <div className='new-expense__controls'>\n            <div className='new-expense__control'>\n                <label>Title</label>\n                <input type='text' onChange={titleChangeHandler} value={enteredTitle} /*onChange={(event) => inputChangeHandler('title', event.target.value)}*//>\n            </div>\n            <div className='new-expense__control'>\n                <label>Amount</label>\n                <input type='number' min='0.01' step='0.01' onChange={amountChangeHandler}/>\n            </div>\n            <div className='new-expense__control'>\n                <label>Date</label>\n                <input type='date' min='2019-01-01' max='2026-12-31' onChange={dateChangeHandler}/>\n            </div>\n        </div>\n        <div className='new-expense__actions'>\n            <button type='submit'>Add Expense</button>\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}