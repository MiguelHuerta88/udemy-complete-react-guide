{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-9-1/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./components/Header/Header\";\nimport Investments from \"./components/Investments/Investments\";\nimport NewInvestmentForm from \"./components/NewInvesmentForm/NewInvestmentForm\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // states\n  const [investments, setInvestments] = useState([]);\n  const calculateHandler = userInput => {\n    console.log(userInput);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput.currentSavings; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput.yearlyContributions; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.expectedReturn / 100;\n    const duration = +userInput.duration;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n    setInvestments(yearlyData);\n    console.log(yearlyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewInvestmentForm, {\n      onAddNewInvestment: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Investments, {\n      investments: investments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9IfJzbCaapGdA9EkR+qAjzWd4bE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Investments","NewInvestmentForm","useState","jsxDEV","_jsxDEV","App","_s","investments","setInvestments","calculateHandler","userInput","console","log","yearlyData","currentSavings","yearlyContribution","yearlyContributions","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddNewInvestment","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-9-1/src/App.js"],"sourcesContent":["import Header from \"./components/Header/Header\";\nimport Investments from \"./components/Investments/Investments\";\nimport NewInvestmentForm from \"./components/NewInvesmentForm/NewInvestmentForm\";\nimport {useState} from \"react\";\n\nfunction App() {\n  // states\n  const [investments, setInvestments] = useState([]);\n\n  const calculateHandler = (userInput) => {\n    console.log(userInput);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput.currentSavings; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput.yearlyContributions; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.expectedReturn / 100;\n    const duration = +userInput.duration;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n    setInvestments(yearlyData);\n    console.log(yearlyData);\n  };\n\n  return (\n    <div>\n      <Header/>\n      <NewInvestmentForm onAddNewInvestment={calculateHandler}/>\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <Investments investments={investments}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,iBAAiB,MAAM,iDAAiD;AAC/E,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMO,gBAAgB,GAAIC,SAAS,IAAK;IACtCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB;IACA;;IAEA,MAAMG,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAG,CAACJ,SAAS,CAACI,cAAc,CAAC,CAAC;IAChD,MAAMC,kBAAkB,GAAG,CAACL,SAAS,CAACM,mBAAmB,CAAC,CAAC;IAC3D,MAAMC,cAAc,GAAG,CAACP,SAAS,CAACO,cAAc,GAAG,GAAG;IACtD,MAAMC,QAAQ,GAAG,CAACR,SAAS,CAACQ,QAAQ;;IAEpC;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGN,cAAc,GAAGG,cAAc;MACtDH,cAAc,IAAIM,cAAc,GAAGL,kBAAkB;MACrDF,UAAU,CAACQ,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAET,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;IACAP,cAAc,CAACK,UAAU,CAAC;IAC1BF,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EACzB,CAAC;EAED,oBACET,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTxB,OAAA,CAACH,iBAAiB;MAAC4B,kBAAkB,EAAEpB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAK1DxB,OAAA,CAACJ,WAAW;MAACO,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACtB,EAAA,CA7CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}