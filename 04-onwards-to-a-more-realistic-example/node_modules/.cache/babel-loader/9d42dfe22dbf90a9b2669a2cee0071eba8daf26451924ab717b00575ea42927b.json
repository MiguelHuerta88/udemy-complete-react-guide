{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyDataFn => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        header: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed\");\n      }\n      const data = await response.json();\n      applyDataFn(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  }, [applyDataFn, requestConfig]);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyDataFn","_s","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","requestConfig","url","method","header","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = (applyDataFn) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        header: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed\");\n      }\n\n      const data = await response.json();\n      applyDataFn(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  }, [applyDataFn, requestConfig]);\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest,\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,WAAW,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAAC,YAAY;IAC1CM,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;QAC9CC,MAAM,EAAEF,aAAa,CAACE,MAAM,GAAGF,aAAa,CAACE,MAAM,GAAG,KAAK;QAC3DC,MAAM,EAAEH,aAAa,CAACI,OAAO,GAAGJ,aAAa,CAACI,OAAO,GAAG,CAAC,CAAC;QAC1DC,IAAI,EAAEL,aAAa,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,aAAa,CAACK,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClCpB,WAAW,CAACmB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;IACjD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACH,WAAW,EAAES,aAAa,CAAC,CAAC;EAEhC,OAAO;IACLP,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EACf,CAAC;AACH,CAAC;AAACL,EAAA,CAhCIF,OAAO;AAkCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}