{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyDataFn => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        header: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed\");\n      }\n      const data = await response.json();\n      applyDataFn(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  }, [applyDataFn, requestConfig]);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyDataFn","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","header","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = (applyDataFn) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(\n    async (requestConfig) => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const response = await fetch(requestConfig.url, {\n          method: requestConfig.method ? requestConfig.method : \"GET\",\n          header: requestConfig.headers ? requestConfig.headers : {},\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Request failed\");\n        }\n\n        const data = await response.json();\n        applyDataFn(data);\n      } catch (err) {\n        setError(err.message || \"Something went wrong\");\n      }\n      setIsLoading(false);\n    },\n    [applyDataFn, requestConfig]\n  );\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest,\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,WAAW,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAC7B,MAAOU,aAAa,IAAK;IACvBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,aAAa,CAACG,GAAG,EAAE;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,MAAM,EAAEL,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,CAAC,CAAC;QAC1DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACN,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCpB,WAAW,CAACmB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;IACjD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACH,WAAW,EAAEO,aAAa,CAC7B,CAAC;EAED,OAAO;IACLL,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EACf,CAAC;AACH,CAAC;AAACL,EAAA,CAnCIF,OAAO;AAqCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}