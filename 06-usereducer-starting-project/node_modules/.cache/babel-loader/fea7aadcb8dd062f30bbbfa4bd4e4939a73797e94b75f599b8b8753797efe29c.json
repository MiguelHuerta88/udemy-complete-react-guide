{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/06-usereducer-starting-project/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport authContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n// outside the component definition.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  // user is inputing text\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  // default case\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  const authCtx = useContext(AuthContext);\n\n  //const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState(\"\");\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n\n  // object destructuring to avoid unessential effect calls when other inputs change. Since we only care about isValid being set\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n  const passwordChangeHandler = event => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"E-Mail\",\n        type: \"email\",\n        id: \"email\",\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler,\n        isValid: emailIsValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler,\n        isValid: passwordIsValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5X9A9aF1b97LplUi6138O+JYB7M=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","authContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","authCtx","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","emailRef","passwordRef","console","log","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","label","id","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/06-usereducer-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport authContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n// outside the component definition.\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  // user is inputing text\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n\n  // default case\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  const authCtx = useContext(AuthContext);\n\n  //const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState(\"\");\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  // object destructuring to avoid unessential effect calls when other inputs change. Since we only care about isValid being set\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n    } else {\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          label=\"E-Mail\"\n          type=\"email\"\n          id=\"email\"\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n          isValid={emailIsValid}\n        />\n        <Input\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n          isValid={passwordIsValid}\n        />\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}