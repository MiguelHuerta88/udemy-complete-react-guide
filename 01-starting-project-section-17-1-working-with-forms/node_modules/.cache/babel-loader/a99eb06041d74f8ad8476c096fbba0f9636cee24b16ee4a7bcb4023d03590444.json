{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-17-1-working-with-forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangedHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== value);\n\n  // email field\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  //const [formIsValid, setFormIsValid] = useState(false);\n\n  // email checks\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\" && enteredEmail.trim().includes(\"@\"); // basic validation\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) formIsValid = true;\n\n  // events\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    // VALIDATIOn\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n\n    // to reset\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n\n    // email resetting\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n\n    //nameInputRef.current.value = \"\"; // this is NOT IDEAL since we are directly modifying the DOM\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must be valid and non empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"3kR80v0xv+j6IYotO47cQOrST2g=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangedHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsInvalid","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-17-1-working-with-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangedHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.trim() !== value);\n\n  // email field\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  //const [formIsValid, setFormIsValid] = useState(false);\n\n  // email checks\n  const enteredEmailIsValid =\n    enteredEmail.trim() !== \"\" && enteredEmail.trim().includes(\"@\"); // basic validation\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) formIsValid = true;\n\n  // events\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    // VALIDATIOn\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    // to reset\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n\n    // email resetting\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n\n    //nameInputRef.current.value = \"\"; // this is NOT IDEAL since we are directly modifying the DOM\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Email must be valid and non empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}