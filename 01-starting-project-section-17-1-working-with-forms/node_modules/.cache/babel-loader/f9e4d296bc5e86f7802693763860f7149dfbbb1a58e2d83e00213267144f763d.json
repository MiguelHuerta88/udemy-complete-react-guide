{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-17-1-working-with-forms/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInputV2 from \"../hooks/use-input-v2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\";\nconst BasicForm = props => {\n  _s();\n  // inputs\n  const {\n    enteredInputValue: enteredName,\n    inputIsValid: enteredNameIsValid,\n    hasError: enteredNameHasError,\n    enteredValueChangeHandler: nameChangedHandler,\n    enteredValueBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInputV2(isNotEmpty);\n  const {\n    enteredInputValue: enteredLastName,\n    inputIsValid: enteredLastNameIsValid,\n    hasError: enteredLastNameHasError,\n    enteredValueChangeHandler: lastNameChangedHandler,\n    enteredValueBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useInputV2(isNotEmpty());\n  const {\n    enteredInputValue: enteredEmail,\n    inputIsValid: enteredEmailIsValid,\n    hasError: enteredEmailHasError,\n    enteredValueChangeHandler: emailChangedHandler,\n    enteredValueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInputV2(value => value.trim() !== \"\" && value.trim().includes(\"@\"));\n\n  // determining if form is valid\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredNameIsValid && enteredLastNameIsValid) formIsValid = true;\n  const submitHandler = event => {\n    event.preventDefault();\n    if (!enteredEmailIsValid && !enteredNameIsValid && !enteredLastNameIsValid) return;\n    resetEmailInput();\n    resetNameInput();\n    resetLastNameInput();\n  };\n\n  // classes\n  const nameClasses = enteredNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = enteredLastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = enteredEmailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameChangedHandler,\n          onBlur: nameBlurHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), enteredNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must be a valid non-empty value.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastNameChangedHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), enteredLastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must be a valid non-empty value.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), enteredEmailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must be valid and non-empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"cTX/bkGGSpF1lGJex+6G3beACPI=\", false, function () {\n  return [useInputV2, useInputV2, useInputV2];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInputV2","jsxDEV","_jsxDEV","isNotEmpty","value","trim","BasicForm","props","_s","enteredInputValue","enteredName","inputIsValid","enteredNameIsValid","hasError","enteredNameHasError","enteredValueChangeHandler","nameChangedHandler","enteredValueBlurHandler","nameBlurHandler","reset","resetNameInput","enteredLastName","enteredLastNameIsValid","enteredLastNameHasError","lastNameChangedHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","enteredEmailIsValid","enteredEmailHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","submitHandler","event","preventDefault","nameClasses","lastNameClasses","emailClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-17-1-working-with-forms/src/components/BasicForm.js"],"sourcesContent":["import useInputV2 from \"../hooks/use-input-v2\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nconst BasicForm = (props) => {\n  // inputs\n  const {\n    enteredInputValue: enteredName,\n    inputIsValid: enteredNameIsValid,\n    hasError: enteredNameHasError,\n    enteredValueChangeHandler: nameChangedHandler,\n    enteredValueBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInputV2(isNotEmpty);\n  const {\n    enteredInputValue: enteredLastName,\n    inputIsValid: enteredLastNameIsValid,\n    hasError: enteredLastNameHasError,\n    enteredValueChangeHandler: lastNameChangedHandler,\n    enteredValueBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useInputV2(isNotEmpty());\n  const {\n    enteredInputValue: enteredEmail,\n    inputIsValid: enteredEmailIsValid,\n    hasError: enteredEmailHasError,\n    enteredValueChangeHandler: emailChangedHandler,\n    enteredValueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInputV2((value) => value.trim() !== \"\" && value.trim().includes(\"@\"));\n\n  // determining if form is valid\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredNameIsValid && enteredLastNameIsValid)\n    formIsValid = true;\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredEmailIsValid && !enteredNameIsValid && !enteredLastNameIsValid)\n      return;\n\n    resetEmailInput();\n    resetNameInput();\n    resetLastNameInput();\n  };\n\n  // classes\n  const nameClasses = enteredNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameClasses = enteredLastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailClasses = enteredEmailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={nameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={nameChangedHandler}\n            onBlur={nameBlurHandler}\n            value={enteredName}\n          />\n          {enteredNameHasError && (\n            <p className=\"error-text\">Name must be a valid non-empty value.</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredLastName}\n            onChange={lastNameChangedHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {enteredLastNameHasError && (\n            <p className=\"error-text\">\n              Last name must be a valid non-empty value.\n            </p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredEmail}\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n        />\n        {enteredEmailHasError && (\n          <p className=\"error-text\">Email must be valid and non-empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}