{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-14-1/src/components/UserFinder.js\";\nimport { Fragment, useState, useEffect, Component } from \"react\";\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\nimport UsersContext from \"../store/users-context\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\n/*const DUMMY_USERS = [\n  { id: \"u1\", name: \"Max\" },\n  { id: \"u2\", name: \"Manuel\" },\n  { id: \"u3\", name: \"Julie\" },\n];*/\n\n/*const UserFinder = () => {\n  const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setFilteredUsers(\n      DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n    );\n  }, [searchTerm]);\n\n  const searchChangeHandler = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.finder}>\n        <input type=\"search\" onChange={searchChangeHandler} />\n      </div>\n      <Users users={filteredUsers} />\n    </Fragment>\n  );\n};\n\nexport default UserFinder;*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      //DUMMY_USERS,\n      searchTerm: \"\"\n    };\n  }\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      filteredUsers: this.context.users\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Users, {\n          users: this.state.filteredUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\n// this is how we use context in Class Components. But we can only use 1 Context per Class Component\nUserFinder.contextType = UsersContext;","map":{"version":3,"names":["Fragment","useState","useEffect","Component","Users","classes","UsersContext","ErrorBoundary","jsxDEV","_jsxDEV","UserFinder","constructor","state","filteredUsers","searchTerm","searchChangeHandler","event","setState","target","value","componentDidMount","context","users","componentDidUpdate","prevProps","prevState","filter","user","name","includes","render","children","className","finder","type","onChange","bind","fileName","_jsxFileName","lineNumber","columnNumber","contextType"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-14-1/src/components/UserFinder.js"],"sourcesContent":["import { Fragment, useState, useEffect, Component } from \"react\";\n\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\nimport UsersContext from \"../store/users-context\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\n/*const DUMMY_USERS = [\n  { id: \"u1\", name: \"Max\" },\n  { id: \"u2\", name: \"Manuel\" },\n  { id: \"u3\", name: \"Julie\" },\n];*/\n\n/*const UserFinder = () => {\n  const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setFilteredUsers(\n      DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n    );\n  }, [searchTerm]);\n\n  const searchChangeHandler = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.finder}>\n        <input type=\"search\" onChange={searchChangeHandler} />\n      </div>\n      <Users users={filteredUsers} />\n    </Fragment>\n  );\n};\n\nexport default UserFinder;*/\n\nexport default class UserFinder extends Component {\n  // this is how we use context in Class Components. But we can only use 1 Context per Class Component\n  static contextType = UsersContext;\n\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [], //DUMMY_USERS,\n      searchTerm: \"\",\n    };\n  }\n\n  searchChangeHandler(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  componentDidMount() {\n    this.setState({\n      filteredUsers: this.context.users,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter((user) =>\n          user.name.includes(this.state.searchTerm)\n        ),\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className={classes.finder}>\n          <input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\n        </div>\n        <ErrorBoundary>\n          <Users users={this.state.filteredUsers} />\n        </ErrorBoundary>\n      </Fragment>\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AAEhE,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA,SAAAC,MAAA,IAAAC,OAAA;AA0BA,eAAe,MAAMC,UAAU,SAASP,SAAS,CAAC;EAIhDQ,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,aAAa,EAAE,EAAE;MAAE;MACnBC,UAAU,EAAE;IACd,CAAC;EACH;EAEAC,mBAAmBA,CAACC,KAAK,EAAE;IACzB,IAAI,CAACC,QAAQ,CAAC;MAAEH,UAAU,EAAEE,KAAK,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EACnD;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACH,QAAQ,CAAC;MACZJ,aAAa,EAAE,IAAI,CAACQ,OAAO,CAACC;IAC9B,CAAC,CAAC;EACJ;EAEAC,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC,IAAIA,SAAS,CAACX,UAAU,KAAK,IAAI,CAACF,KAAK,CAACE,UAAU,EAAE;MAClD,IAAI,CAACG,QAAQ,CAAC;QACZJ,aAAa,EAAE,IAAI,CAACQ,OAAO,CAACC,KAAK,CAACI,MAAM,CAAEC,IAAI,IAC5CA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACjB,KAAK,CAACE,UAAU,CAC1C;MACF,CAAC,CAAC;IACJ;EACF;EAEAgB,MAAMA,CAAA,EAAG;IACP,oBACErB,OAAA,CAACT,QAAQ;MAAA+B,QAAA,gBACPtB,OAAA;QAAKuB,SAAS,EAAE3B,OAAO,CAAC4B,MAAO;QAAAF,QAAA,eAC7BtB,OAAA;UAAOyB,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAE,IAAI,CAACpB,mBAAmB,CAACqB,IAAI,CAAC,IAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACN/B,OAAA,CAACF,aAAa;QAAAwB,QAAA,eACZtB,OAAA,CAACL,KAAK;UAACkB,KAAK,EAAE,IAAI,CAACV,KAAK,CAACC;QAAc;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEf;AACF;AA3CE;AADmB9B,UAAU,CAEtB+B,WAAW,GAAGnC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}