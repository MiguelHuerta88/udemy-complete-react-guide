{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-12-1-food-app/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  // inputs using custom hooks\n\n  // state\n  /*const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postal: true,\n  });*/\n\n  // here we could do it where we validate when form is submitted or on each change/keystroke (i.e creating custom hook)\n  // we went with validation on form submission\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  const nameClasses = `${styles.control} ${formInputsValidity.name ? \"\" : styles.invalid}`;\n  const streetClasses = `${styles.control} ${formInputsValidity.street ? \"\" : styles.invalid}`;\n  const postalClasses = `${styles.control} ${formInputsValidity.postal ? \"\" : styles.invalid}`;\n  const cityClasses = `${styles.control} ${formInputsValidity.city ? \"\" : styles.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal minimum 5 chars long.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"nfS3/dztalSKhCrzdej52cXpvao=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["styles","useRef","useState","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","setFormInputValidity","name","street","postal","city","formIsValid","nameClasses","control","formInputsValidity","invalid","streetClasses","postalClasses","cityClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-12-1-food-app/src/components/Cart/Checkout.js"],"sourcesContent":["import styles from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  // inputs using custom hooks\n\n  // state\n  /*const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postal: true,\n  });*/\n\n  // here we could do it where we validate when form is submitted or on each change/keystroke (i.e creating custom hook)\n  // we went with validation on form submission\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalIsValid &&\n      enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameClasses = `${styles.control} ${\n    formInputsValidity.name ? \"\" : styles.invalid\n  }`;\n  const streetClasses = `${styles.control} ${\n    formInputsValidity.street ? \"\" : styles.invalid\n  }`;\n  const postalClasses = `${styles.control} ${\n    formInputsValidity.postal ? \"\" : styles.invalid\n  }`;\n  const cityClasses = `${styles.control} ${\n    formInputsValidity.city ? \"\" : styles.invalid\n  }`;\n\n  return (\n    <form onSubmit={confirmHandler}>\n      <div className={nameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name.</p>}\n      </div>\n      <div className={streetClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street.</p>}\n      </div>\n      <div className={postalClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputsValidity.postal && (\n          <p>Please enter a valid postal minimum 5 chars long.</p>\n        )}\n      </div>\n      <div className={cityClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city.</p>}\n      </div>\n      <div className={styles.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}