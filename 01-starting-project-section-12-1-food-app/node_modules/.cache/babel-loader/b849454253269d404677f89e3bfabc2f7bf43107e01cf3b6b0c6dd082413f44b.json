{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  // state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // fns\n\n  // we will wrap this in a callback to not have to recreate on each component rendering\n  const sendRequest = useCallback(async function (requestConfig) {\n    let applyDataFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed\");\n      }\n\n      // parse response\n      const data = await response.json();\n      if (applyDataFn) {\n        applyDataFn();\n      }\n    } catch (e) {\n      setError(e.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  }, []); // no dependencies here\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyDataFn","arguments","length","undefined","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","e","message"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-12-1-food-app/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  // state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // fns\n\n  // we will wrap this in a callback to not have to recreate on each component rendering\n  const sendRequest = useCallback(async (requestConfig, applyDataFn = null) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed\");\n      }\n\n      // parse response\n      const data = await response.json();\n\n      if (applyDataFn) {\n        applyDataFn();\n      }\n    } catch (e) {\n      setError(e.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  }, []); // no dependencies here\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest,\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAExC;;EAEA;EACA,MAAMO,WAAW,GAAGR,WAAW,CAAC,gBAAOS,aAAa,EAAyB;IAAA,IAAvBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IACtEN,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,aAAa,CAACO,GAAG,EAAE;QAC9CC,MAAM,EAAER,aAAa,CAACQ,MAAM,GAAGR,aAAa,CAACQ,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAET,aAAa,CAACS,OAAO,GAAGT,aAAa,CAACS,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEV,aAAa,CAACU,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACZ,aAAa,CAACU,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;;MAEA;MACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,IAAIf,WAAW,EAAE;QACfA,WAAW,CAAC,CAAC;MACf;IACF,CAAC,CAAC,OAAOgB,CAAC,EAAE;MACVnB,QAAQ,CAACmB,CAAC,CAACC,OAAO,IAAI,sBAAsB,CAAC;IAC/C;IACAtB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EACf,CAAC;AACH,CAAC;AAACL,EAAA,CAvCID,OAAO;AAyCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}