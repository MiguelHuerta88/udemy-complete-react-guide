{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-21-spa/src/pages/Products.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductsPage = () => {\n  // you might get the products from DB and have them in an array\n  const PRODUCTS = [{\n    id: \"p1\",\n    title: \"Product 1\"\n  }, {\n    id: \"p2\",\n    title: \"Product 2\"\n  }, {\n    id: \"p3\",\n    title: \"Product 3\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Products Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: PRODUCTS.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/products/${product.id}`,\n          children: \"Product 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ProductsPage;\nexport default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductsPage","PRODUCTS","id","title","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","to","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-21-spa/src/pages/Products.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst ProductsPage = () => {\n  // you might get the products from DB and have them in an array\n  const PRODUCTS = [\n    {\n      id: \"p1\",\n      title: \"Product 1\",\n    },\n    {\n      id: \"p2\",\n      title: \"Product 2\",\n    },\n    {\n      id: \"p3\",\n      title: \"Product 3\",\n    },\n  ];\n\n  return (\n    <>\n      <h1>The Products Page</h1>\n      <ul>\n        {PRODUCTS.map((product) => (\n          <li>\n            <Link to={`/products/${product.id}`}>Product 1</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ProductsPage;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB;EACA,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,EACD;IACED,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,EACD;IACED,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CACF;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BX,OAAA;MAAAO,QAAA,EACGH,QAAQ,CAACQ,GAAG,CAAEC,OAAO,iBACpBb,OAAA;QAAAO,QAAA,eACEP,OAAA,CAACF,IAAI;UAACgB,EAAE,EAAG,aAAYD,OAAO,CAACR,EAAG,EAAE;UAAAE,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACI,EAAA,GA7BIZ,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}