{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-15-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-75b26-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) throw new Error(\"Something went wrong\");\n      const data = await response.json();\n      const loadedMovies = [];\n      const transformedMovies = data.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) content = /*#__PURE__*/_jsxDEV(MoviesList, {\n    movies: movies\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 36\n  }, this);\n  if (error) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 24\n  }, this);\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 28\n  }, this);\n  const addMovieHandler = async movie => {\n    const response = await fetch(\"https://react-http-75b26-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","transformedMovies","map","movie","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","err","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","addMovieHandler","method","body","JSON","stringify","headers","console","log","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-15-1/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-75b26-default-rtdb.firebaseio.com/movies.json\"\n      );\n      if (!response.ok) throw new Error(\"Something went wrong\");\n      const data = await response.json();\n      const loadedMovies = [];\n\n      const transformedMovies = data.map((movie) => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) content = <MoviesList movies={movies} />;\n  if (error) content = <p>{error}</p>;\n  if (isLoading) content = <p>Loading....</p>;\n\n  const addMovieHandler = async (movie) => {\n    const response = await fetch(\n      \"https://react-http-75b26-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}