{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-19-2-redux/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport { counterActions } from \"../store\";\n// we can also use useStore but useSelector more convenient\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // when you use useSelector it will automatically set up subscriber to this component\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n  const dispatch = useDispatch(); // returns a function we can use\n\n  // handlers\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const increaseHandler = () => {\n    dispatch(counterActions.increase({\n      amount: 5\n    }));\n  };\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"6LcjmzGwbakCfSm2kUDyfwG8ChU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\n\n/*\n// class component with Redux\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n\n  decrementHandler() {\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {}\n  render() {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n          <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n        </div>\n        <button onClick={this.toggleCounterHandler.bind(this)}>\n          Toggle Counter\n        </button>\n      </main>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n*/\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","connect","Component","counterActions","jsxDEV","_jsxDEV","Counter","_s","counter","state","show","showCounter","dispatch","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","amount","toggleCounterHandler","toggleCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-19-2-redux/src/components/Counter.js"],"sourcesContent":["import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport { counterActions } from \"../store\";\n// we can also use useStore but useSelector more convenient\n\nconst Counter = () => {\n  // when you use useSelector it will automatically set up subscriber to this component\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.showCounter);\n  const dispatch = useDispatch(); // returns a function we can use\n\n  // handlers\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase({ amount: 5 }));\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={decrementHandler}>Decrement</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n/*\n// class component with Redux\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n\n  decrementHandler() {\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {}\n  render() {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n          <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n        </div>\n        <button onClick={this.toggleCounterHandler.bind(this)}>\n          Toggle Counter\n        </button>\n      </main>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}