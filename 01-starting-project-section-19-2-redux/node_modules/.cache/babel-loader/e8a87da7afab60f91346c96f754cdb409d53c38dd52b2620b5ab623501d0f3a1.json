{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// section for actions\nexport const INCREMENT = \"increment\";\nexport const DECREMENT = \"decrement\";\nexport const INCREASE = \"increase\";\nexport const TOGGLE = \"toggle\";\n\n// reducer\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCounter() {}\n  }\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState\n});\n\n// WE ALWAYS HAVE TO RETURN NEW INSTANCE OF STATE. WE CANNOT MERGE WITH EXISTING STATE. WE CANNOT MUTATE EXISTING STATE.\n// WE ALWAYS RETURN NEW INTSANCE ALWAYS!!!\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === DECREMENT) {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter - 1\n    };\n  }\n  if (action.type === INCREASE) {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === TOGGLE) {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  // return unchanged state\n  return state;\n};\n\n// creating store\nconst store = createStore(counterReducer);\n\n// export to allow connecting to it\nexport default store;","map":{"version":3,"names":["createStore","createSlice","INCREMENT","DECREMENT","INCREASE","TOGGLE","initialState","counter","showCounter","reducers","increment","decrement","increase","toggleCounter","name","counterReducer","state","arguments","length","undefined","action","type","amount","store"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/01-starting-project-section-19-2-redux/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// section for actions\nexport const INCREMENT = \"increment\";\nexport const DECREMENT = \"decrement\";\nexport const INCREASE = \"increase\";\nexport const TOGGLE = \"toggle\";\n\n// reducer\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCounter() {},\n  },\n};\n\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n});\n\n// WE ALWAYS HAVE TO RETURN NEW INSTANCE OF STATE. WE CANNOT MERGE WITH EXISTING STATE. WE CANNOT MUTATE EXISTING STATE.\n// WE ALWAYS RETURN NEW INTSANCE ALWAYS!!!\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === INCREASE) {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === TOGGLE) {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n\n  // return unchanged state\n  return state;\n};\n\n// creating store\nconst store = createStore(counterReducer);\n\n// export to allow connecting to it\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,QAAQA,CAAA,EAAG,CAAC,CAAC;IACbC,aAAaA,CAAA,EAAG,CAAC;EACnB;AACF,CAAC;AAEDZ,WAAW,CAAC;EACVa,IAAI,EAAE,SAAS;EACfR,YAAY,EAAEA;AAChB,CAAC,CAAC;;AAEF;AACA;AACA,MAAMS,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,YAAY;EAAA,IAAEc,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,IAAIC,MAAM,CAACC,IAAI,KAAKnB,SAAS,EAAE;IAC7B,OAAO;MACLK,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEQ,KAAK,CAACR;IACrB,CAAC;EACH;EAEA,IAAIY,MAAM,CAACC,IAAI,KAAKlB,SAAS,EAAE;IAC7B,OAAO;MACLK,WAAW,EAAEQ,KAAK,CAACR,WAAW;MAC9BD,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,IAAIa,MAAM,CAACC,IAAI,KAAKjB,QAAQ,EAAE;IAC5B,OAAO;MACLG,OAAO,EAAES,KAAK,CAACT,OAAO,GAAGa,MAAM,CAACE,MAAM;MACtCd,WAAW,EAAEQ,KAAK,CAACR;IACrB,CAAC;EACH;EAEA,IAAIY,MAAM,CAACC,IAAI,KAAKhB,MAAM,EAAE;IAC1B,OAAO;MACLE,OAAO,EAAES,KAAK,CAACT,OAAO;MACtBC,WAAW,EAAE,CAACQ,KAAK,CAACR;IACtB,CAAC;EACH;;EAEA;EACA,OAAOQ,KAAK;AACd,CAAC;;AAED;AACA,MAAMO,KAAK,GAAGvB,WAAW,CAACe,cAAc,CAAC;;AAEzC;AACA,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}