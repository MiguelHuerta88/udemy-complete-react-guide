{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/07-optimizing-with-usememo/src/components/Demo/DemoList.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport classes from \"./DemoList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoList = props => {\n  _s();\n  // use this hook to avoid rerunning this logic since it wont change\n  const sortedList = useMemo(() => {\n    return props.items.sort((a, b) => a - b);\n  }, []);\n  console.log(\"DemoList Running\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.list,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n// to avoid rerunning this logic since the sorting is complex. or could be if list was larger.\n// so using Memo will not rerun.\n_s(DemoList, \"Y1oh7OVMKAaS1gxcPL9tHK5JobM=\");\n_c = DemoList;\nexport default _c2 = /*#__PURE__*/React.memo(DemoList);\nvar _c, _c2;\n$RefreshReg$(_c, \"DemoList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useMemo","classes","jsxDEV","_jsxDEV","DemoList","props","_s","sortedList","items","sort","a","b","console","log","className","list","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/07-optimizing-with-usememo/src/components/Demo/DemoList.js"],"sourcesContent":["import React, { useMemo } from \"react\";\n\nimport classes from \"./DemoList.module.css\";\n\nconst DemoList = (props) => {\n  // use this hook to avoid rerunning this logic since it wont change\n  const sortedList = useMemo(() => {\n    return props.items.sort((a, b) => a - b);\n  }, []);\n\n  console.log(\"DemoList Running\");\n  return (\n    <div className={classes.list}>\n      <h2>{props.title}</h2>\n      <ul>\n        {sortedList.map((item) => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// to avoid rerunning this logic since the sorting is complex. or could be if list was larger.\n// so using Memo will not rerun.\nexport default React.memo(DemoList);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAEtC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B;EACA,MAAMC,UAAU,GAAGP,OAAO,CAAC,MAAM;IAC/B,OAAOK,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,oBACEV,OAAA;IAAKW,SAAS,EAAEb,OAAO,CAACc,IAAK;IAAAC,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAKX,KAAK,CAACY;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBlB,OAAA;MAAAa,QAAA,EACGT,UAAU,CAACe,GAAG,CAAEC,IAAI,iBACnBpB,OAAA;QAAAa,QAAA,EAAgBO;MAAI,GAAXA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;;AAED;AACA;AAAAf,EAAA,CApBMF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAqBd,eAAAqB,GAAA,gBAAe1B,KAAK,CAAC2B,IAAI,CAACtB,QAAQ,CAAC;AAAC,IAAAoB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}