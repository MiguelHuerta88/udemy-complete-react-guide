{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport { json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const params = useParams();\n  const event = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"cEmQpC3B+Mo0RcpQGdaBY8LHvCY=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(`https://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","useParams","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData, useParams } from \"react-router-dom\";\nimport { json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nexport default function EventDetailPage() {\n  const params = useParams();\n  const event = useLoaderData();\n  return <EventItem event={event} />;\n}\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  const response = await fetch(`https://localhost:8080/events/${id}`);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event\" },\n      { status: 500 }\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AAC3D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,KAAK,GAAGT,aAAa,CAAC,CAAC;EAC7B,oBAAOK,OAAA,CAACF,SAAS;IAACM,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;AAACN,EAAA,CAJuBD,eAAe;EAAA,QACtBL,SAAS,EACVD,aAAa;AAAA;AAAAc,EAAA,GAFLR,eAAe;AAMvC,OAAO,eAAeS,MAAMA,CAAC;EAAEC,OAAO;EAAER;AAAO,CAAC,EAAE;EAChD,MAAMS,EAAE,GAAGT,MAAM,CAACU,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCH,EAAG,EAAC,CAAC;EAEnE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMnB,IAAI,CACR;MAAEoB,OAAO,EAAE;IAA6C,CAAC,EACzD;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}