{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport async function newEventAction({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    body: JSON.stringify(eventData),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","newEventAction","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\n\nexport default function NewEventPage() {\n  return <EventForm method=\"post\" />;\n}\n\nexport async function newEventAction({ request, params }) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    body: JSON.stringify(eventData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  if (!response.ok) {\n    throw json({ message: \"Could not save event\" }, { status: 500 });\n  }\n}\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,oBAAOD,OAAA,CAACH,SAAS;IAACK,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;AAACC,EAAA,GAFuBN,YAAY;AAIpC,OAAO,eAAeO,cAAcA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACxD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DlB,MAAM,EAAE,MAAM;IACdmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,SAAS,CAAC;IAC/BW,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAM3B,IAAI,CAAC;MAAE4B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE;AACF;AAAC,IAAApB,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}