{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/Error.js\",\n  _s = $RefreshSig$();\nimport PageContent from \"../components/PageContent\";\nimport { useRouteError } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ErrorPage() {\n  _s();\n  // depending on how the error was thrown it will contain diff fields.\n  // if we threw Response we will have status field\n  // if we threw and Error the error will be the object without status\n  const error = useRouteError();\n  let title = \"An error occurred!\";\n  let message = \"Something wen wrong!\";\n\n  // checking for status\n  if (error.status === 5000) {}\n  return /*#__PURE__*/_jsxDEV(PageContent, {\n    title: \"An error occurred!\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ErrorPage, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["PageContent","useRouteError","jsxDEV","_jsxDEV","ErrorPage","_s","error","title","message","status","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/Error.js"],"sourcesContent":["import PageContent from \"../components/PageContent\";\nimport { useRouteError } from \"react-router-dom\";\n\nexport default function ErrorPage() {\n  // depending on how the error was thrown it will contain diff fields.\n  // if we threw Response we will have status field\n  // if we threw and Error the error will be the object without status\n  const error = useRouteError();\n\n  let title = \"An error occurred!\";\n  let message = \"Something wen wrong!\";\n\n  // checking for status\n  if (error.status === 5000) {\n  }\n\n  return (\n    <PageContent title=\"An error occurred!\">\n      <p>Something went wrong</p>\n    </PageContent>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,2BAA2B;AACnD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA;EACA;EACA,MAAMC,KAAK,GAAGL,aAAa,CAAC,CAAC;EAE7B,IAAIM,KAAK,GAAG,oBAAoB;EAChC,IAAIC,OAAO,GAAG,sBAAsB;;EAEpC;EACA,IAAIF,KAAK,CAACG,MAAM,KAAK,IAAI,EAAE,CAC3B;EAEA,oBACEN,OAAA,CAACH,WAAW;IAACO,KAAK,EAAC,oBAAoB;IAAAG,QAAA,eACrCP,OAAA;MAAAO,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAElB;AAACT,EAAA,CAlBuBD,SAAS;EAAA,QAIjBH,aAAa;AAAA;AAAAc,EAAA,GAJLX,SAAS;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}