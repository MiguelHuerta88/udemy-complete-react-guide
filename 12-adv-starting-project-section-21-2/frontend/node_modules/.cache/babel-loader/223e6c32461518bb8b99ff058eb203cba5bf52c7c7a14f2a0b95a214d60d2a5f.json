{"ast":null,"code":"var _jsxFileName = \"/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: data.events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEevents() {\n  // we can use any Client, browser APIs side code here. But we cant use react hooks i.e useState()\n  // ie. localStorage, cookies\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // one way to handle errors\n    //return { isError: true, message: \"Could not fetch events\" };\n    // building responses like this can be cumbersome so react-router-dom has a utility function json\n    /*throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n      status: 500,\n    });*/\n    throw json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    // we can return it since browser supports Response() object responses.\n    // then in page were we call it we extract the data\n    return response;\n  }\n}\n\n/**\n *\n * @return {Promise<*>}\n */\nexport async function loader() {}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loadEevents","response","fetch","ok","status","loader","$RefreshReg$"],"sources":["/Users/miguelhuerta/Desktop/code/react-complete-guide-udemy/12-adv-starting-project-section-21-2/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  if (data.isError) {\n    return <p>{data.message}</p>;\n  }\n  return <EventsList events={data.events} />;\n}\n\nexport default EventsPage;\nasync function loadEevents() {\n  // we can use any Client, browser APIs side code here. But we cant use react hooks i.e useState()\n  // ie. localStorage, cookies\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // one way to handle errors\n    //return { isError: true, message: \"Could not fetch events\" };\n    // building responses like this can be cumbersome so react-router-dom has a utility function json\n    /*throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n      status: 500,\n    });*/\n    throw json({ message: \"Could not fetch events\" }, { status: 500 });\n  } else {\n    // we can return it since browser supports Response() object responses.\n    // then in page were we call it we extract the data\n    return response;\n  }\n}\n\n/**\n *\n * @return {Promise<*>}\n */\nexport async function loader() {}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAE5B,IAAIO,IAAI,CAACC,OAAO,EAAE;IAChB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EACA,oBAAOV,OAAA,CAACF,UAAU;IAACa,MAAM,EAAER,IAAI,CAACQ;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C;AAACR,EAAA,CAPQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAgB,EAAA,GADnBX,UAAU;AASnB,eAAeA,UAAU;AACzB,eAAeY,WAAWA,CAAA,EAAG;EAC3B;EACA;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;AACJ;AACA;IACI,MAAMnB,IAAI,CAAC;MAAES,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEW,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE,CAAC,MAAM;IACL;IACA;IACA,OAAOH,QAAQ;EACjB;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAeI,MAAMA,CAAA,EAAG,CAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}